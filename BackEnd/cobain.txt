cobain.txt 
            # --- ENHANCED PROMPT ENGINEERING (核心改进部分) ---
            # 构建一个极其清晰和严格的指令，引导LLM精确定位错误。
            prompt = f"""
You are an expert HSK Mandarin teacher specializing in assessing essays from Indonesian learners.
Your task is to analyze the following essay and provide a structured assessment in a SINGLE, VALID JSON OBJECT.

**Essay Input (THIS IS THE TEXT TO ANALYZE):**
{essay}

**Task Requirements:**
- HSK Level: {hsk_level}
- Rubric: {rubric_description}
- Focus Areas & Weighting:
    1. Grammar Accuracy (30%): Correct use of particles (的/得/地), word order, sentence structure.
    2. Vocabulary Level (20%): Use of appropriate HSK {hsk_level} vocabulary.
    3. Coherence (20%): Logical flow and sentence connections.
    4. Cultural Adaptation (30%): Identification of errors common to Indonesian learners.

**CRITICAL ERROR TYPES FOR DETECTION (Focus Here):**
1.  **S-P-O-K Interference:** Incorrect word order due to Bahasa Indonesia influence.
    *   Example Error in Essay: If the essay contained "我吃饭在餐厅", this would be an error.
    *   Corrected: "我在餐厅吃饭"
2.  **False Friends:** Words that look/sound similar but have different meanings or usage contexts for Indonesians.
    *   Example Error in Essay: If the essay contained "这条路很忙" (to mean a busy road), this would be an error.
    *   Corrected: "这条路很拥挤"
3.  **Particle Misuse:** Incorrect or unnecessary use of particles like 是, 的, 得, 地.
    *   Example Error in Essay: If the essay contained "我妹妹是十岁", this would be an error.
    *   Corrected: "我妹妹十岁"

**MANDATORY OUTPUT INSTRUCTIONS:**
- Analyze ONLY the provided 'Essay Input' text character by character.
- For EACH identified error of the critical types listed above:
    a.  Identify the EXACT SUBSTRING from the 'Essay Input' that is incorrect. This substring becomes the value for `incorrect_fragment`.
    b.  Determine the ZERO-BASED starting character index (inclusive) and the ending character index (exclusive) of this substring within the 'Essay Input' text. Python slicing `essay[start:end]` should yield the `incorrect_fragment`.
    c.  Provide the precise correction for that substring. This becomes the value for `suggested_correction`.
    d.  Classify the error type (`word_order`, `false_friend`, `particle_misuse`).
    e.  Write a concise explanation IN ENGLISH explaining WHY the original fragment was incorrect and how the correction fixes it.
- CRITICAL: If NO ERRORS of the specified critical types are found, return an empty `error_list`: [].
- CRITICAL: Output MUST be a SINGLE, VALID JSON OBJECT enclosed by {{}}. NO OTHER TEXT, MARKDOWN, OR EXPLANATIONS OUTSIDE THE JSON.
- CRITICAL: ALL JSON KEYS MUST BE IN `snake_case` (e.g., `overall_score`, `error_type`, `error_position`, `incorrect_fragment`, `suggested_correction`, `explanation`, `detailed_scores`, `cultural_adaptation`).
- CRITICAL: `error_position` MUST BE an array of TWO INTEGERS: [start_character_index, end_character_index], derived from the 'Essay Input' text.
- CRITICAL: `error_list` MUST BE an array, which can be empty [].
- CRITICAL: `detailed_scores` MUST CONTAIN keys: `grammar`, `vocabulary`, `coherence`, `cultural_adaptation`.
- CRITICAL: Explanations and general feedback MUST BE IN ENGLISH.
- CRITICAL: Corrections (`suggested_correction`) MUST BE IN CHINESE CHARACTERS (Hanzi).

**Example for Clarification (DO NOT COPY THIS EXAMPLE'S VALUES):**
If analyzing the essay "我吃饭在餐厅", and finding the error "吃饭在":
- `incorrect_fragment` would be "吃饭在"
- `suggested_correction` would be "在吃饭" (assuming this is the fix)
- `error_position` would be [2, 5] BECAUSE:
    - Character at index 2 is '吃'
    - Character at index 3 is '饭'
    - Character at index 4 is '在'
    - The slice `essay[2:5]` gives "吃饭在"
- `error_type` would be "word_order"
- `explanation` would be "The word order follows the S-P-O-K pattern from Bahasa Indonesia. In Mandarin, the location/time phrase '在餐厅' (at the restaurant) should come before the verb '吃饭' (eat). The correct order is S-K-P-O."

**Required JSON Output Schema:**
{{
  "overall_score": 0, // Integer, overall score from 0 to 100
  "detailed_scores": {{
    "grammar": 0,       // Integer, score for grammar (0-100)
    "vocabulary": 0,    // Integer, score for vocabulary (0-100)
    "coherence": 0,     // Integer, score for coherence (0-100)
    "cultural_adaptation": 0 // Integer, score for detecting learner-specific errors (0-100)
  }},
  "error_list": [ // Array of specific errors found, can be empty []
    {{
      "error_type": "word_order", // String, MUST BE ONE OF: "word_order", "false_friend", "particle_misuse"
      "error_position": [0, 0], // Array of two integers, [start_index, end_index] BASED ON THE INPUT ESSAY
      "incorrect_fragment": "", // String, the EXACT erroneous text copied from the INPUT ESSAY
      "suggested_correction": "", // String, the corrected Chinese text (Hanzi)
      "explanation": "" // String, reason for error and correction IN ENGLISH
    }}
  ],
  "feedback": "" // String, general constructive comments IN ENGLISH
}}

**NOW, perform your analysis on the provided 'Essay Input' and output the SINGLE JSON object.**
"""
